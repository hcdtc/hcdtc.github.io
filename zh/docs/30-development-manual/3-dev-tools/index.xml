<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发工具指引 on 汉得中台成都远程中心 | 中台远程交付团队</title>
    <link>http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/</link>
    <description>Recent content in 开发工具指引 on 汉得中台成都远程中心 | 中台远程交付团队</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git使用指南</title>
      <link>http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/1-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/1-git/</guid>
      <description> Git使用 </description>
    </item>
    
    <item>
      <title>Idea使用指南</title>
      <link>http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/2-idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hcdtc.github.io/zh/docs/30-development-manual/3-dev-tools/2-idea/</guid>
      <description>在Intellij IDEA中使用Debug　  Debug用来追踪代码的运行流程，通常在程序运行过程中出现异常，启用Debug模式可以分析定位异常发生的位置，以及在运行过程中参数的变化。通常我们也可以启用Debug模式来跟踪代码的运行流程去学习三方框架的源码。
 一、Debug开篇 首先看下IDEA中Debug模式下的界面。
如下是在IDEA中启动Debug模式，进入断点后的界面，我这里是Windows，可能和Mac的图标等会有些不一样。就简单说下图中标注的8个地方：
① 以Debug模式启动服务，左边的一个按钮则是以Run模式启动。在开发中，我一般会直接启动Debug模式，方便随时调试代码。
② 断点：在左边行号栏单击左键，或者快捷键Ctrl+F8 打上/取消断点，断点行的颜色可自己去设置。
③ Debug窗口：访问请求到达第一个断点后，会自动激活Debug窗口。如果没有自动激活，可以去设置里设置，如图1.2。
④ 调试按钮：一共有8个按钮，调试的主要功能就对应着这几个按钮，鼠标悬停在按钮上可以查看对应的快捷键。在菜单栏Run里可以找到同样的对应的功能，如图1.4。
⑤ 服务按钮：可以在这里关闭/启动服务，设置断点等。
⑥ 方法调用栈：这里显示了该线程调试所经过的所有方法，勾选右上角的[Show All Frames]按钮，就不会显示其它类库的方法了，否则这里会有一大堆的方法。
⑦ Variables：在变量区可以查看当前断点之前的当前方法内的变量。
⑧ Watches：查看变量，可以将Variables区中的变量拖到Watches中查看
[图1.1] [图1.2]：在设置里勾选Show debug window on breakpoint，则请求进入到断点后自动激活Debug窗口 [图1.3]：如果你的IDEA底部没有显示工具栏或状态栏，可以在View里打开，显示出工具栏会方便我们使用。可以自己去尝试下这四个选项。 [图1.4]：在菜单栏Run里有调试对应的功能，同时可以查看对应的快捷键。 二、基本用法&amp;amp;快捷键 Debug调试的功能主要对应着图一中4和5两组按钮：
1、首先说第一组按钮，共8个按钮，从左到右依次如下：
[图2.1]
&amp;gt; Show Execution Point (Alt + F10)：如果你的光标在其它行或其它页面，点击这个按钮可跳转到当前代码执行的行。
　&amp;gt; Step Over (F8)：步过，一行一行地往下走，如果这一行上有方法不会进入方法。
　&amp;gt; Step Into (F7)：步入，如果当前行有方法，可以进入方法内部，一般用于进入自定义方法内，不会进入官方类库的方法，如第25行的put方法。
　&amp;gt; Force Step Into (Alt + Shift + F7)：强制步入，能进入任何方法，查看底层源码的时候可以用这个进入官方类库的方法。
　&amp;gt; Step Out (Shift + F8)：步出，从步入的方法内退出到方法调用处，此时方法已执行完毕，只是还没有完成赋值。</description>
    </item>
    
  </channel>
</rss>